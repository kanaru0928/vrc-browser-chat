name: Release

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: write
  issues: write

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Semantic Release
        id: semantic
        run: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: semantic-release
    if: needs.semantic-release.outputs.new-release-published == 'true'
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: v${{ needs.semantic-release.outputs.new-release-version }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build web app
        run: |
          cd web
          pnpm build

      - name: Upload build artifacts to release
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: v${{ needs.semantic-release.outputs.new-release-version }}
          releaseName: Release v${{ needs.semantic-release.outputs.new-release-version }}
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          projectPath: ./server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-v${{ needs.semantic-release.outputs.new-release-version }}
          path: |
            server/src-tauri/target/release/bundle/
          retention-days: 30
