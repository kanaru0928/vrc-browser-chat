name: Release

on:
  push:
    branches: [release]
    paths:
      - "web/**"
      - "server/**"
      - ".github/workflows/release.yml"
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: write
  issues: write

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      new-release-version: ${{ steps.get-latest-tag.outputs.new-release-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Semantic Release
        id: semantic-release
        run: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag
        id: get-latest-tag
        run: echo "new-release-version=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

  build:
    needs: semantic-release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.semantic-release.outputs.new-release-version }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./server/src-tauri -> target"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build web app
        run: |
          cd web
          pnpm build

      - name: Upload build artifacts to release
        uses: tauri-apps/tauri-action@v0
        id: tauri
        with:
          tagName: v__VERSION__
          releaseName: Release v__VERSION__
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          projectPath: ./server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-v${{ steps.tauri.outputs.appVersion }}
          path: |
            server/src-tauri/target/release/bundle/
          retention-days: 30
